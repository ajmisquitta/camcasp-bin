Here's another example of the use of the runcamcasp.py script to run a
properties job.

The Cluster input file is called formamide.clt, but the "file-prefix"
used to label the job is HCONH2, so we need to tell the runcamcasp.py
script to use two different names.

The vertical IP of formamide is 0.3745 a.u.

No detail here. Just the commands used. File structure is the same as
that used in the H2O/ and He/ example directories, so see the README files
there for details.

HCONH2.axes contains the local axis definitions. This file is generated by
the user. If absent, the local polarizabilities will be computed in the
global axis system.

Commands (replace "-q bg" by the appropriate queue designation for
your system):

$ runcamcasp.py HCONH2 --clt formamide.clt -q bg

This step creates a directory HCONH2 containing files for the
calculation, and results in the subdirectory OUT. Copies of all these
are in directory output_1, except for the large .pol file containing
the non-local distributed polarizabilities and the even larger .p2p
file containing the point-to-point polarization responses.

$ cd HCONH2/
$ localize.py HCONH2

This step generates a large number of further files, most of which can
be removed:

$ localize.py HCONH2 --clean

Of the remaining files, HCONH2_NL4_static.pol contains the static
non-local distributed polarizabilities, HCONH2_ref_wt4_L2_0f10.pol
contains the refined polarizabilities, static and imaginary-frequency,
and HCONH2_wt4_L2_C10.pot contains the dispersion coefficients. The
files HCONH2_ref_wt4_L2_nnn.out contain the output from the refinement
(pfit) procedure for each frequency. Copies of all these files are in
the directory output_2.
