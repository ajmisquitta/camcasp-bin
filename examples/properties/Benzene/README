Benzene PBE0/ALDA Sadlej-pVTZ 
=============================
Note: This calculation takes about an hour in total.

Here's another example of the use of the runcamcasp.py script to run a
properties job.

The Cluster input file is called Benzene.clt, but the "file-prefix"
used to label the job is benzene_sadlej, so we need to tell the
runcamcasp.py script to use two different names.

The vertical IP of benzene is 0.3397 a.u.

No detail here. Just the commands used. File structure is the same as
that used in the H2O/ and He/ example directories, so see the README files
there for details.

CamCASP will calculate the non-local polarizabilities without
using symmetry (though you will see that they obey D6h symmetry
to all significant figures). The localized polarizabilities will
automatically satisfy D6h symmetry as they are derived from the non-local
polarizabilities, although loss of precision in the localization procedure
can result in small deviations. These small terms can often be removed using a
cutoff on the polarizabilities. The cutoff is specified in file
    $ output_2/benzene_sadlej.prss
By default it is set to 0.0001 a.u. As you will see, this is insufficient for
the present case.

Symmetry:
=========
The refined local polarizabilities will exhibit small violations of D6h
because the point-to-point polarizabilities used in the refinement process
are calculated on a grid that does not reflect the molecular symmetry. 
To avoid these deviations, the Benzene.clt file contains the TYPE commands
that impose C6 symmetry:
  C1   6.0    2.6462324347    0.0000000000    0.0000000000  Type C
  C2   6.0    1.3231162173    2.2917045128    0.0000000000  Type C
  C3   6.0   -1.3231162173    2.2917045128    0.0000000000  Type C
  C4   6.0   -2.6462324347    0.0000000000    0.0000000000  Type C
  C5   6.0   -1.3231162173   -2.2917045128    0.0000000000  Type C
  C6   6.0    1.3231162173   -2.2917045128    0.0000000000  Type C
  H1   1.0    4.7082995437    0.0000000000    0.0000000000  Type H
  H2   1.0    2.3541497718    4.0775070135    0.0000000000  Type H
  H3   1.0   -2.3541497718    4.0775070135    0.0000000000  Type H
  H4   1.0   -4.7082995437    0.0000000000    0.0000000000  Type H
  H5   1.0   -2.3541497718   -4.0775070135    0.0000000000  Type H
  H6   1.0    2.3541497718   -4.0775070135    0.0000000000  Type H
All carbons are type C and all hydrogens type H. We cannot yet impose
reflection symmetry. 

Local axis definitions:
=======================
benzene_sadlej.axes contains the local axis definitions. Local axes
should reflect the local site symmetry, which is C2v for both C and H,
so the z axis is chosen along the local C2 axis (i.e. along the C-H
bond) and x and y in the local symmetry planes. The choice doesn't
affect overall accuracy, but does result in a more compact
representation of the polarizability matrix. The axis file is
generated by the user. If it's absent, the local polarizabilities will
be computed in the global axis system, but this would then be
inconsistent with the symmetry of the molecule imposed by the TYPE
commands (in Benzene.clt).

Symmetry violations:
====================

An inspection of file
   $ output_2/benzene_sadlej_ref_wt4_L2_000.out
shows that we have residual violations of D6h symmetry. The carbon
11c_20, 11c_22c, 10_21c, 20_21c and 21c_22c terms should be zero (by
reflection symmetry) but they are non-zero, though small. This can be
corrected using the benzene_sadlej.pdef file, which is generated the
first time the polarizability refinement is carried out. The lines
defining the unwanted polarizabilities can just be deleted. This has
been done in output_2a/benzene_sadlej.pdef. The program uses the .pdef
file if it's already present, rather than generating a new one.

Now the distributed (local) polarizability matrix does satisfy D6h. 
The accuracy of the description is virtually unchanged, but because of
the smaller number of terms, the dispersion coefficients are
considerably more compact: 337 terms versus 900 in the previous model. 
It therefore pays to impose exact symmetries as far as possible, and
sometimes even approximate symmetries can lead to dramatic
simplifications in the dispersion models without significant losses in
overall accuracy. The .pdef file provides a very flexible way to
define the polarizability model, and can be used to explore the
effects of imposing various approximations.

Commands:
---------
Commands (replace "-q bg" by the appropriate queue designation for
your system):

$ runcamcasp.py benzene_sadlej --clt Benzene.clt -q bg

This part of the calculation will probably take less than an hour. The
localization and refinement should take only a few minutes and can be
run in the foreground:

$ cd benzene_sadlej/
$ localize.py benzene_sadlej

The results in output_2a were obtained by editing the file
benzene_sadlej.pdef to reflect the correct local symmetry and
re-running the localize.py command. Inspection of the resulting output
files shows that they now have the correct symmetry, and that the
non-zero polarizabilities have not changed very much.

